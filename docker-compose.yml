version: '3.8'

services:
  mongo:
    image: mongo:7.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - fasttech-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - fasttech-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  products-api-read:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROJECT: api
    container_name: fasttechfoods-productsservice-api
    ports:
      - "5001:80"
    environment:
      - ConnectionStrings__MongoDb=mongodb://mongo:27017/FastTechFoods-ProductsDB
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - fasttech-network

  products-worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROJECT: worker
    container_name: fasttechfoods-productsservice-worker
    environment:
      - ConnectionStrings__MongoDb=mongodb://mongo:27017/FastTechFoods-ProductsDB
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - fasttech-network

volumes:
  mongo_data:

networks:
  fasttech-network:
